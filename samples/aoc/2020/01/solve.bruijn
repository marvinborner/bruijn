# TODO: While this obviously isn't the most performant solution, it should still
#       be a lot faster than it currently is. I think there's some problem with
#       underlying strictness/laziness

:import std/Combinator .
:import std/String .
:import std/Math .
:import std/Pair P

part1 z [[rec]]
	rec ((P.uncurry …+… ^0) =? (+2020)) case-done case-cont
		case-done P.uncurry …⋅… ^0
		case-cont 1 ~0

part2 z [[rec]]
	rec (∑(^0) =? (+2020)) case-done case-cont
		case-done ∏(^0)
		case-cont 1 ~0

main [parts nums]
	nums number! <$> ~(<~>(lines 0))
	parts [(part1 (cross 0 0)) : (part2 (cross3 0 0 0))]
