# MIT License, Copyright (c) 2022 Marvin Borner

:import std/Combinator .

# pairs two expressions into one
pair [[[0 2 1]]]

# extracts first expression from pair
fst [0 T]
:test fst (pair [[0]] [[1]]) = [[0]]

# extracts second expression from pair
snd [0 F]
:test snd (pair [[0]] [[1]]) = [[1]]

# applies both elements of a pair to a function
uncurry [[1 (fst 0) (snd 0)]]
:test uncurry W (pair [[0]] [[1]]) = [[1]]

# applies a function to the pair of two values
curry [[[2 (pair 1 0)]]]
:test curry fst [[0]] [[1]] = [[0]]

# swaps the values of a pair
swap [pair (snd 0) (fst 0)]
:test swap (pair [[0]] [[1]]) = pair [[1]] [[0]]
